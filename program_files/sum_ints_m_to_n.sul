# sums the numbers from start --> end (start and end are included)
# for example to sum (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 ) start = 1 and end = 10
# there is no restictions, start > end and start > end are valid inputs
# we have the restrinctions that -1,000,000,000 <= input <= 1,000,000,000

# 1. start < end
check {
    input ( num: list [ 11 101 ] )
    output ( num: 5096 )
}

# 2. start > end
{
    input ( num: list [ 331 163] )
    output ( num: 41743 )
}

# 3. start = end
check {
    input ( num: list [ 999 999] )
    output ( num: 999 )
}

# 4. start = 0
{
    input ( num: list [ 0 256 ] )
    output ( num: 32896 )
}

# 5. start = -end
{
    input ( num: list [ 3698 -3698 ] )
    output ( num: 0 )
}

# 6. start < 0, end > 0
{
    input ( num: list [ -369 42] )
    output ( num: -67362 )
}

# 7. start < 0, end < 0
{
    input ( num: list [ -52 -9371 ] )
    output ( num: -43911180 )
}

# 8. start = end = 0
check {
    input ( num: list [ 0 0 ] )
    output ( num: 0 )
}

# 9. end > 0
check {
    input ( num: 974 )
    output ( num: 474825 )
}

# 10. end < 0
{
    input ( num: -42 )
    output ( num: -903 )
}

# 11. end = 0
{
    input ( num: 0 )
    output ( num: 0 )
}

# 12. sum > MAX_INT value
{
    input ( num: list [ 28 101269 ] )
    output ( num: 5127755437 )
}

# 13. sum < MIN_INT value
{
    input ( num: list [ -36 -256311] )
    output ( num: -32847791886 )
}